openapi: 3.0.3
info:
  title: Raffle Project
  version: 1.0.0
  description: Projeto para organizar Rifas
paths:
  /api/schema/:
    get:
      operationId: schema_retrieve
      description: |-
        OpenApi3 schema for this API. Format can be selected via content negotiation.

        - YAML: application/vnd.oai.openapi
        - JSON: application/vnd.oai.openapi+json
      parameters:
      - in: query
        name: format
        schema:
          type: string
          enum:
          - json
          - yaml
      - in: query
        name: lang
        schema:
          type: string
          enum:
          - af
          - ar
          - ar-dz
          - ast
          - az
          - be
          - bg
          - bn
          - br
          - bs
          - ca
          - cs
          - cy
          - da
          - de
          - dsb
          - el
          - en
          - en-au
          - en-gb
          - eo
          - es
          - es-ar
          - es-co
          - es-mx
          - es-ni
          - es-ve
          - et
          - eu
          - fa
          - fi
          - fr
          - fy
          - ga
          - gd
          - gl
          - he
          - hi
          - hr
          - hsb
          - hu
          - hy
          - ia
          - id
          - ig
          - io
          - is
          - it
          - ja
          - ka
          - kab
          - kk
          - km
          - kn
          - ko
          - ky
          - lb
          - lt
          - lv
          - mk
          - ml
          - mn
          - mr
          - ms
          - my
          - nb
          - ne
          - nl
          - nn
          - os
          - pa
          - pl
          - pt
          - pt-br
          - ro
          - ru
          - sk
          - sl
          - sq
          - sr
          - sr-latn
          - sv
          - sw
          - ta
          - te
          - tg
          - th
          - tk
          - tr
          - tt
          - udm
          - uk
          - ur
          - uz
          - vi
          - zh-hans
          - zh-hant
      tags:
      - schema
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/vnd.oai.openapi:
              schema:
                type: object
                additionalProperties: {}
            application/yaml:
              schema:
                type: object
                additionalProperties: {}
            application/vnd.oai.openapi+json:
              schema:
                type: object
                additionalProperties: {}
            application/json:
              schema:
                type: object
                additionalProperties: {}
          description: ''
  /api/v1/campaigns/:
    get:
      operationId: v1_campaigns_list
      description: API endpoint that allows raffles to be viewed or edited.
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - v1
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedCampaignList'
          description: ''
    post:
      operationId: v1_campaigns_create
      description: API endpoint that allows raffles to be viewed or edited.
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Campaign'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Campaign'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Campaign'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Campaign'
          description: ''
  /api/v1/campaigns/{id}/:
    get:
      operationId: v1_campaigns_retrieve
      description: API endpoint that allows raffles to be viewed or edited.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this campaign.
        required: true
      tags:
      - v1
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Campaign'
          description: ''
    put:
      operationId: v1_campaigns_update
      description: API endpoint that allows raffles to be viewed or edited.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this campaign.
        required: true
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Campaign'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Campaign'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Campaign'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Campaign'
          description: ''
    patch:
      operationId: v1_campaigns_partial_update
      description: API endpoint that allows raffles to be viewed or edited.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this campaign.
        required: true
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedCampaign'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedCampaign'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedCampaign'
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Campaign'
          description: ''
    delete:
      operationId: v1_campaigns_destroy
      description: API endpoint that allows raffles to be viewed or edited.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this campaign.
        required: true
      tags:
      - v1
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/groups/:
    get:
      operationId: v1_groups_list
      description: API endpoint that allows groups to be viewed or edited.
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - v1
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedGroupList'
          description: ''
    post:
      operationId: v1_groups_create
      description: API endpoint that allows groups to be viewed or edited.
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Group'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Group'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Group'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Group'
          description: ''
  /api/v1/groups/{id}/:
    get:
      operationId: v1_groups_retrieve
      description: API endpoint that allows groups to be viewed or edited.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this grupo.
        required: true
      tags:
      - v1
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Group'
          description: ''
    put:
      operationId: v1_groups_update
      description: API endpoint that allows groups to be viewed or edited.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this grupo.
        required: true
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Group'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Group'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Group'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Group'
          description: ''
    patch:
      operationId: v1_groups_partial_update
      description: API endpoint that allows groups to be viewed or edited.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this grupo.
        required: true
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedGroup'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedGroup'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedGroup'
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Group'
          description: ''
    delete:
      operationId: v1_groups_destroy
      description: API endpoint that allows groups to be viewed or edited.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this grupo.
        required: true
      tags:
      - v1
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/prizes/:
    get:
      operationId: v1_prizes_list
      description: API endpoint that allows prizes to be viewed or edited.
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - v1
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedPrizeList'
          description: ''
    post:
      operationId: v1_prizes_create
      description: API endpoint that allows prizes to be viewed or edited.
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Prize'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Prize'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Prize'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Prize'
          description: ''
  /api/v1/prizes/{id}/:
    get:
      operationId: v1_prizes_retrieve
      description: API endpoint that allows prizes to be viewed or edited.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this prize.
        required: true
      tags:
      - v1
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Prize'
          description: ''
    put:
      operationId: v1_prizes_update
      description: API endpoint that allows prizes to be viewed or edited.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this prize.
        required: true
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Prize'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Prize'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Prize'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Prize'
          description: ''
    patch:
      operationId: v1_prizes_partial_update
      description: API endpoint that allows prizes to be viewed or edited.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this prize.
        required: true
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedPrize'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedPrize'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedPrize'
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Prize'
          description: ''
    delete:
      operationId: v1_prizes_destroy
      description: API endpoint that allows prizes to be viewed or edited.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this prize.
        required: true
      tags:
      - v1
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/raffles/:
    get:
      operationId: v1_raffles_list
      description: API endpoint that allows raffles to be viewed or edited.
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - v1
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedRaffleList'
          description: ''
    post:
      operationId: v1_raffles_create
      description: API endpoint that allows raffles to be viewed or edited.
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Raffle'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Raffle'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Raffle'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Raffle'
          description: ''
  /api/v1/raffles/{id}/:
    get:
      operationId: v1_raffles_retrieve
      description: API endpoint that allows raffles to be viewed or edited.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this raffle.
        required: true
      tags:
      - v1
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Raffle'
          description: ''
    put:
      operationId: v1_raffles_update
      description: API endpoint that allows raffles to be viewed or edited.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this raffle.
        required: true
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Raffle'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Raffle'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Raffle'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Raffle'
          description: ''
    patch:
      operationId: v1_raffles_partial_update
      description: API endpoint that allows raffles to be viewed or edited.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this raffle.
        required: true
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedRaffle'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedRaffle'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedRaffle'
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Raffle'
          description: ''
    delete:
      operationId: v1_raffles_destroy
      description: API endpoint that allows raffles to be viewed or edited.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this raffle.
        required: true
      tags:
      - v1
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/raffles/{id}/tickets/:
    get:
      operationId: v1_raffles_tickets_retrieve
      description: API endpoint that allows raffles to be viewed or edited.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this raffle.
        required: true
      tags:
      - v1
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Raffle'
          description: ''
  /api/v1/tickets/:
    get:
      operationId: v1_tickets_list
      description: API endpoint that allows tickets to be viewed or edited.
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - v1
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedTicketList'
          description: ''
    post:
      operationId: v1_tickets_create
      description: API endpoint that allows tickets to be viewed or edited.
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Ticket'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Ticket'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Ticket'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Ticket'
          description: ''
  /api/v1/tickets/{id}/:
    get:
      operationId: v1_tickets_retrieve
      description: API endpoint that allows tickets to be viewed or edited.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this ticket.
        required: true
      tags:
      - v1
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Ticket'
          description: ''
    put:
      operationId: v1_tickets_update
      description: API endpoint that allows tickets to be viewed or edited.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this ticket.
        required: true
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Ticket'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Ticket'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Ticket'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Ticket'
          description: ''
    patch:
      operationId: v1_tickets_partial_update
      description: API endpoint that allows tickets to be viewed or edited.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this ticket.
        required: true
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedTicket'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedTicket'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedTicket'
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Ticket'
          description: ''
    delete:
      operationId: v1_tickets_destroy
      description: API endpoint that allows tickets to be viewed or edited.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this ticket.
        required: true
      tags:
      - v1
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/users/:
    get:
      operationId: v1_users_list
      description: API endpoint that allows users to be viewed or edited.
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - v1
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedUserList'
          description: ''
    post:
      operationId: v1_users_create
      description: API endpoint that allows users to be viewed or edited.
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/User'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/User'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
  /api/v1/users/{id}/:
    get:
      operationId: v1_users_retrieve
      description: API endpoint that allows users to be viewed or edited.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this usuário.
        required: true
      tags:
      - v1
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
    put:
      operationId: v1_users_update
      description: API endpoint that allows users to be viewed or edited.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this usuário.
        required: true
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/User'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/User'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
    patch:
      operationId: v1_users_partial_update
      description: API endpoint that allows users to be viewed or edited.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this usuário.
        required: true
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedUser'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedUser'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedUser'
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
    delete:
      operationId: v1_users_destroy
      description: API endpoint that allows users to be viewed or edited.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this usuário.
        required: true
      tags:
      - v1
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '204':
          description: No response body
components:
  schemas:
    Campaign:
      type: object
      properties:
        url:
          type: string
          format: uri
          readOnly: true
        user:
          type: integer
        raffle:
          type: integer
      required:
      - raffle
      - url
      - user
    Group:
      type: object
      properties:
        url:
          type: string
          format: uri
          readOnly: true
        name:
          type: string
          title: Nome
          maxLength: 150
      required:
      - name
      - url
    PaginatedCampaignList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Campaign'
    PaginatedGroupList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Group'
    PaginatedPrizeList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Prize'
    PaginatedRaffleList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Raffle'
    PaginatedTicketList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Ticket'
    PaginatedUserList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/User'
    PatchedCampaign:
      type: object
      properties:
        url:
          type: string
          format: uri
          readOnly: true
        user:
          type: integer
        raffle:
          type: integer
    PatchedGroup:
      type: object
      properties:
        url:
          type: string
          format: uri
          readOnly: true
        name:
          type: string
          title: Nome
          maxLength: 150
    PatchedPrize:
      type: object
      properties:
        url:
          type: string
          format: uri
          readOnly: true
        prize_name:
          type: string
          maxLength: 256
        prize_image:
          type: string
          format: uri
          nullable: true
        description:
          type: string
          nullable: true
    PatchedRaffle:
      type: object
      properties:
        url:
          type: string
          format: uri
          readOnly: true
        name:
          type: string
          maxLength: 257
        max_number:
          type: integer
        raffle_image:
          type: string
          format: uri
          nullable: true
        end_date:
          type: string
          format: date-time
          nullable: true
        description:
          type: string
          nullable: true
    PatchedTicket:
      type: object
      properties:
        url:
          type: string
          format: uri
          readOnly: true
        number:
          type: integer
        raffle:
          type: integer
        is_active:
          type: boolean
        user:
          type: integer
    PatchedUser:
      type: object
      properties:
        url:
          type: string
          format: uri
          readOnly: true
        username:
          type: string
          title: Usuário
          description: Obrigatório. 150 caracteres ou menos. Letras, números e @/./+/-/_
            apenas.
          pattern: ^[\w.@+-]+$
          maxLength: 150
        email:
          type: string
          format: email
          title: Endereço de email
          maxLength: 254
        groups:
          type: array
          items:
            type: string
            format: uri
            title: Grupos
          title: Grupos
          description: Os grupos que este usuário pertence. Um usuário terá todas
            as permissões concedidas a cada um dos seus grupos.
    Prize:
      type: object
      properties:
        url:
          type: string
          format: uri
          readOnly: true
        prize_name:
          type: string
          maxLength: 256
        prize_image:
          type: string
          format: uri
          nullable: true
        description:
          type: string
          nullable: true
      required:
      - prize_name
      - url
    Raffle:
      type: object
      properties:
        url:
          type: string
          format: uri
          readOnly: true
        name:
          type: string
          maxLength: 257
        max_number:
          type: integer
        raffle_image:
          type: string
          format: uri
          nullable: true
        end_date:
          type: string
          format: date-time
          nullable: true
        description:
          type: string
          nullable: true
      required:
      - max_number
      - name
      - url
    Ticket:
      type: object
      properties:
        url:
          type: string
          format: uri
          readOnly: true
        number:
          type: integer
        raffle:
          type: integer
        is_active:
          type: boolean
        user:
          type: integer
      required:
      - number
      - raffle
      - url
      - user
    User:
      type: object
      properties:
        url:
          type: string
          format: uri
          readOnly: true
        username:
          type: string
          title: Usuário
          description: Obrigatório. 150 caracteres ou menos. Letras, números e @/./+/-/_
            apenas.
          pattern: ^[\w.@+-]+$
          maxLength: 150
        email:
          type: string
          format: email
          title: Endereço de email
          maxLength: 254
        groups:
          type: array
          items:
            type: string
            format: uri
            title: Grupos
          title: Grupos
          description: Os grupos que este usuário pertence. Um usuário terá todas
            as permissões concedidas a cada um dos seus grupos.
      required:
      - url
      - username
  securitySchemes:
    basicAuth:
      type: http
      scheme: basic
    cookieAuth:
      type: apiKey
      in: cookie
      name: sessionid
